set(CKRASTERIZERLIB_INC_DIR ${PROJECT_SOURCE_DIR}/include)

set(CKRASTERIZERLIB_PUBLIC_HDRS
        ${CKRASTERIZERLIB_INC_DIR}/CKRasterizerEnums.h
        ${CKRASTERIZERLIB_INC_DIR}/CKRasterizerTypes.h
        ${CKRASTERIZERLIB_INC_DIR}/CKRasterizer.h
        ${CKRASTERIZERLIB_INC_DIR}/RasterizersTextureDesc.h
        )

set(CKRASTERIZERLIB_PRIVATE_HDRS
        )

set(CKRASTERIZERLIB_SRCS
        CKRasterizer.cpp
        CKRasterizerDriver.cpp
        CKRasterizerContext.cpp
        )

add_library(CKRasterizerLib STATIC ${CKRASTERIZERLIB_SRCS} ${CKRASTERIZERLIB_PUBLIC_HDRS} ${CKRASTERIZERLIB_PRIVATE_HDRS})

add_library(CKNULLRasterizer SHARED ${CKRASTERIZERLIB_SRCS} ${CKRASTERIZERLIB_PUBLIC_HDRS} ${CKRASTERIZERLIB_PRIVATE_HDRS})
set_target_properties(CKNULLRasterizer PROPERTIES DEFINE_SYMBOL CKNULLRASTERIZER_DLL)

foreach (LIB IN ITEMS CKRasterizerLib CKNULLRasterizer)
    target_include_directories(${LIB} PUBLIC ${CKRASTERIZERLIB_INC_DIR})
    target_link_libraries(${LIB} PUBLIC CK2 VxMath)

    # Disable msvc unsafe warnings
    target_compile_definitions(${LIB} PRIVATE
            $<$<C_COMPILER_ID:MSVC>:_CRT_SECURE_NO_WARNINGS>
            $<$<C_COMPILER_ID:MSVC>:_CRT_NONSTDC_NO_WARNINGS>
            )
endforeach ()

if (NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)
    install(TARGETS CKRasterizerLib CKNULLRasterizer
            RUNTIME DESTINATION "${INSTALL_BIN_DIR}"
            ARCHIVE DESTINATION "${INSTALL_LIB_DIR}"
            LIBRARY DESTINATION "${INSTALL_LIB_DIR}")
endif ()

if (NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL)
    install(FILES ${CKRASTERIZERLIB_PUBLIC_HDRS} DESTINATION "${INSTALL_INC_DIR}")
endif ()

set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VENDOR Kakuty)
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CMAKE_PROJECT_VERSION}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_NAME}")
set(CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}")
set(CPACK_GENERATOR "ZIP")
include(CPack)
